1. git으로 관리할 경로까지 이동
2. 초기화(.git 폴더 생성 - 숨겨져 있음)
    git init
    -> .git폴더 삭제(rm -rf.git) 

3. 브랜치 이름 기본값 변경하기
    git config --global init.defaultBranch main (초기값 변경)
    git branch -M main (현재 브랜치명 변경)

4. git 상태 확인
    git status

5. git 으로 관리하는 파일로 추가
    git add .

6. commit(해당 시점을 저장)
    git commit -m "커밋 메시지"

7. commit 이전에 계정정보 등록(--global 옵션은 해당 컴퓨터 전체에 적용)
    git config list
    git config --global user.name "Your name"
    git config --global user.email "Your email"

    git config --global --unset user.name

8. comit 정보 확인
    git log

9. 과제
project_5/test1을 생성
git으로 관리
파일 생성은 알아서.. 최소 커밋의 수는 5번 이상이 되도록 하세요.


--------------------------------------------------------
로컬 컴퓨터(코드있음)와 github(비어있음) 사이트 연결
1. remote 정보 확인
    git remote
    git remote -v

2. remote 추가
    git remote add origin https://github.com/seonhu0810/project5_work1.git
    git remote add 리모트이름 github 리파지토리 주소

3. remote 삭제
    git remote rm 리모트이름
    git remote rm origin

4. github 데이터 넣기
    git push -u origin main  처음만
    git push

git bash 복붙
    ctrl insert
    ctrl shift insert


----------------------------------------------------------
clone 하기
- 코드가 없는 상태에서 전체 코드를 다운로드 받을 경우

# 현재 위치에 리파지토리 이름의 폴더를 만들고 파일을 가져온다
git clone <git-remote-url>

# <디렉토리 위치에 파일을 가져온다.>
git clone <git-remote-url> <디렉토리>
git clone <gir-remote-url> .
----------------------------------------------------------
pull 
- 코드가 있는 상태에서 변경된 부분만 받을 경우

git pull


----------------------------------------------------------
파일 제외시키기
.gitignore


----------------------------------------------------------
브랜치 작성
- 브랜치 목록 확인
git branch

- 브랜치 생성
git branch test01

- 브랜치 이동
git switch test01

- 브랜치에서 소스 코, add, comit 작업 진행